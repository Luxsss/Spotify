{"ast":null,"code":"var _jsxFileName = \"/Users/alexis/WAC/Projets_web/spotify/rush-spotify/src/components/AlbumDetails.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Navbar } from \"./Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function AlbumDetails() {\n  _s();\n  const {\n    albumid\n  } = useParams();\n  const [album, setalbum] = useState({});\n  const [songs, setsongs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [actualSong, setActualSong] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8000/albums/\" + albumid);\n        const data = await response.json();\n        setalbum(data.album);\n        setsongs(data.tracks);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [albumid]);\n  const playSong = song => {\n    if (actualSong === song) {\n      setActualSong(null);\n    } else {\n      setActualSong(song);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"background\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"\",\n      children: album.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n      className: \"text\",\n      children: album.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"\",\n      children: \"Tracks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: songs.map(song => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"App-link\",\n            children: song.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text\",\n            children: [\"Track Number : \", song.track_no]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => playSong(song),\n          children: actualSong === song ? \"Pause\" : \"Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), actualSong === song && /*#__PURE__*/_jsxDEV(\"audio\", {\n          controls: true,\n          children: [/*#__PURE__*/_jsxDEV(\"source\", {\n            src: song.mp3,\n            type: \"audio/mpeg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this), \"Your browser does not support the audio element.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this)]\n      }, song.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(AlbumDetails, \"u5eGg6by4H6NUVmQ5YW3kfSPx5g=\", false, function () {\n  return [useParams];\n});\n_c = AlbumDetails;\nvar _c;\n$RefreshReg$(_c, \"AlbumDetails\");","map":{"version":3,"names":["useState","useEffect","useParams","Navbar","jsxDEV","_jsxDEV","AlbumDetails","_s","albumid","album","setalbum","songs","setsongs","loading","setLoading","actualSong","setActualSong","fetchData","response","fetch","data","json","tracks","error","console","playSong","song","children","fileName","_jsxFileName","lineNumber","columnNumber","className","name","description","map","track_no","onClick","controls","src","mp3","type","id","_c","$RefreshReg$"],"sources":["/Users/alexis/WAC/Projets_web/spotify/rush-spotify/src/components/AlbumDetails.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Navbar } from \"./Navbar\";\n\nexport function AlbumDetails() {\n  const { albumid } = useParams();\n  const [album, setalbum] = useState({});\n  const [songs, setsongs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [actualSong, setActualSong] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8000/albums/\" + albumid);\n        const data = await response.json();\n        setalbum(data.album);\n        setsongs(data.tracks);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [albumid]);\n\n  const playSong = (song) => {\n    if (actualSong === song) {\n      setActualSong(null);\n    } else {\n      setActualSong(song);\n    }\n  };\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"background\">\n      <Navbar />\n      <h1 className=\"\">{album.name}</h1>\n      <small className=\"text\">{album.description}</small>\n      <h2 className=\"\">Tracks</h2>\n      <ul>\n        {songs.map((song) => (\n          <li key={song.id}>\n            <div>\n              <h4 className=\"App-link\">{song.name}</h4>\n              <p className=\"text\">Track Number : {song.track_no}</p>\n            </div>\n            <button onClick={() => playSong(song)}>\n              {actualSong === song ? \"Pause\" : \"Play\"}\n            </button>\n            {actualSong === song && (\n              <audio controls>\n                <source src={song.mp3} type=\"audio/mpeg\" />\n                Your browser does not support the audio element.\n              </audio>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}